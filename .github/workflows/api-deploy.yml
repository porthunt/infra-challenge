name: API Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'Makefile'
      - 'requirements-dev.txt'
      - '.gitignore'
      - '.github/workflows/destroy.yml'
      - '/github/images/*'
      - 'tests/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./primer-api
    
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: make init

      - name: Run pre-commit hooks
        shell: bash
        run: pre-commit run --all-files
      
      - name: Execute bandit
        run: make bandit
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -recursive -check

  tests:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./primer-api
    
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: make init

      - name: Unit tests
        run: make unit
        timeout-minutes: 1

  tf-deploy:
    runs-on: ubuntu-20.04
    needs: [validate, tests]
    defaults:
      run:
        working-directory: ./terraform/playground
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Create ZIP file
        working-directory: ./primer-api
        run: |
          pip install --target ./package -r requirements.txt
          cd package && zip -q -r ../primer-api.zip .
          zip -g -q -r ../primer-api.zip ../app

      - name: Terraform Plan
        run: |
          terraform plan \
          -var="username=${{ secrets.username }}" \
          -var="api_key=${{secrets.api_key}}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
          -var="username=${{ secrets.username }}" \
          -var="api_key=${{secrets.api_key}}"

  deploy-serverless-framework-api:
    needs: [tf-deploy]
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./primer-api

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 17

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      - name: Set up environment
        run: npm install

      - name: Serverless Deploy
        run: npx serverless deploy --stage dev --conceal
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  verify:
    needs: [deploy-serverless-framework-api, tf-deploy]
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./primer-api
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          API_KEY: ${{ secrets.API_KEY }}
      
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: make init

      - name: Verify endpoints - terraform lambdas
        run: pytest tests/functional --api porthunt-transaction-api -s
        timeout-minutes: 1
      
      - name: Verify endpoints - serverless framework
        run: pytest tests/functional --api dev-primer-challenge-serverless-framework -s
        timeout-minutes: 1
