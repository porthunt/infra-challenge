{
  "openapi": "3.0.1",
  "info": {
    "title": "primer-challenge",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:3000/local",
      "description": "Local server"
    }
  ],
  "paths": {
    "/populate": {
      "post": {
        "x-amazon-apigateway-integration": {
          "uri": "${populate_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "timeoutInMillis": "${lambda_timeout}",
          "type": "aws_proxy"
        },
        "responses": {
          "200": {
            "description": "Successfully populated the DynamoDB table."
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "x-amazon-apigateway-api-key-source": "HEADER",
        "x-amazon-apigateway-integration": {
          "uri": "${transactions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "timeoutInMillis": "${lambda_timeout}",
          "type": "aws_proxy"
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "merchant",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Merchant name (case insensitive)"
          },
          {
            "in": "query",
            "name": "currency",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Currency code (case insensitive)"
          },
          {
            "in": "query",
            "name": "processor",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Processor name (case insensitive)"
          },
          {
            "in": "query",
            "name": "amount",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Amount to filter (can be used a [gte|lte]:[amount], e.g. gte:400)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "required": false,
            "description": "Amount of transactions to be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all the transactions that match.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transactions"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "x-amazon-apigateway-api-key-source": "HEADER",
        "x-amazon-apigateway-integration": {
          "uri": "${transactions_lambda_arn}",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST",
          "timeoutInMillis": "${lambda_timeout}",
          "type": "aws_proxy"
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Merchant name (case insensitive)"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all the transactions that match.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "The transaction with the ID {id} was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Generic404Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Generic404Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status_code": {
            "type": "integer",
            "example": 404
          },
          "status": {
            "type": "string",
            "example": "error"
          }
        },
        "additionalProperties": false
      },
      "Transactions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Transaction"
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "merchant": {
            "type": "string"
          },
          "processor": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}